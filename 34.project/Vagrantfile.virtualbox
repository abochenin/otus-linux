# -*- mode: ruby -*-
# vim: set ft=ruby :
# -*- mode: ruby -*-
# vim: set ft=ruby :

disk_size = 100 # in megabytes
disk_dir = '../vmdisks' # directory where additional disk files are stored
disk_controller = 'IDE' # MacOS. This setting is OS dependent. Details https://github.com/hashicorp/vagrant/issues/8105


MACHINES = {
  :backup => {
    :box_name => "centos/7",
    :ip_addr => "192.168.34.102",
    :memory => "512",
    :disks => {
    }
  },
  :fe1 => {
    :box_name => "centos/7",
    :ip_addr => "192.168.34.103",
    :memory => "512",
    :disks => {
    }
  },
  :fe2 => {
    :box_name => "centos/7",
    :ip_addr => "192.168.34.104",
    :memory => "512",
    :disks => {
    }
  },
  :db1 => {
    :box_name => "centos/7",
    :ip_addr => "192.168.34.105",
    :memory => "512",
    :disks => {
        :sata1 => {
            :dfile => 'db1.vdi',
            :size => 500,
            :port => 1
        }
    }
  },
  :db2 => {
    :box_name => "centos/7",
    :ip_addr => "192.168.34.106",
    :memory => "512",
    :disks => {
        :sata1 => {
            :dfile => 'db2.vdi',
            :size => 500,
            :port => 1
        }
    }
  },
  :db3 => {
    :box_name => "centos/7",
    :ip_addr => "192.168.34.107",
    :memory => "512",
    :disks => {
        :sata1 => {
            :dfile => 'db3.vdi',
            :size => 500,
            :port => 1
        }
    }
  }
}


Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s
        config.vm.synced_folder '.', '/vagrant', disabled: true
        box.vm.network "private_network", ip: boxconfig[:ip_addr]

        box.vm.provider "virtualbox" do |vb|
            vb.name = boxname.to_s
            vb.memory = boxconfig[:memory]
            needsController = false

            boxconfig[:disks].each do |dname, dconf|
                unless File.exist?(dconf[:dfile])
                    vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                    needsController = true
                end
            end

            if needsController == true
                vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                boxconfig[:disks].each do |dname, dconf|
                    vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                end
            end
        end

#        end

        if boxconfig.key?(:public)
            box.vm.network "public_network", boxconfig[:public]
        end

        box.vm.provision "shell", inline: <<-SHELL
              mkdir -p ~root/.ssh; cp ~vagrant/.ssh/auth* ~root/.ssh
              sed -i '65s/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
              systemctl restart sshd
#              yum install -y mc
        SHELL

        end

  end

#  config.vm.provision "ansible" do |ansible|
##    ansible.verbose = "v"
#    ansible.playbook = "provision/playbook.yml"
#    ansible.sudo = "true"
#  end


end

